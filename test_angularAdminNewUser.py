# PREREQUISITE: User must already be logged in to the site
# This script assumes you're starting from the dashboard/home page after login

# Generated by Selenium IDE
import pytest
import time
import json
import random
import string
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

# Configuration - Update these for your site
BASE_URL = "https://[SITENAME].pixalized.com"

class TestAngularAdminNewUser():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def generate_random_string(self, length=6):
    """Generate random string for names and email suffix"""
    return ''.join(random.choices(string.ascii_lowercase + string.digits, k=length))
  
  def test_angularAdminNewUser(self):
    # Generate random data for user creation
    random_first_name = f"Test{self.generate_random_string(4)}"
    random_last_name = f"User{self.generate_random_string(4)}"
    random_email_suffix = self.generate_random_string(8)
    random_email = f"theladywyvern+{random_email_suffix}@gmail.com"
    
    # Navigate directly to Angular admin users page
    self.driver.get(f"{BASE_URL}/admin/ng/users")
    self.driver.set_window_size(1382, 784)
    
    # Start creating new user
    self.driver.find_element(By.ID, "new-user").click()
    
    # Fill in user details with randomized data
    self.driver.find_element(By.CSS_SELECTOR, "#fc-first-name > span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".ng-dirty:nth-child(2)").send_keys(random_first_name)
    self.driver.find_element(By.CSS_SELECTOR, "#fc-last-name > .form-control").send_keys(random_last_name)
    self.driver.find_element(By.CSS_SELECTOR, "#fc-username > .form-control").send_keys(random_email)
    
    # Static fields as requested
    self.driver.find_element(By.CSS_SELECTOR, "#fc-epaceid > .form-control").send_keys("Test")
    self.driver.find_element(By.CSS_SELECTOR, "#fc-acctcode > .form-control").send_keys("Basic")
    self.driver.find_element(By.CSS_SELECTOR, "#fc-clientid > .form-control").click()
    self.driver.find_element(By.CSS_SELECTOR, "#fc-clientid > .form-control").send_keys("Test")
    
    # Add notes
    self.driver.find_element(By.ID, "i-notes").click()
    self.driver.find_element(By.ID, "i-notes").send_keys("New user in admin")
    
    # Submit the form
    self.driver.find_element(By.ID, "btn-submit").click()
    element = self.driver.find_element(By.ID, "btn-submit")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.execute_script("window.scrollTo(0,45)")
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
