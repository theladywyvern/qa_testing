# Generated by Selenium IDE
import pytest
import time
import json
import random
import string
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

# Configuration - Update these for your site/user
SITE_URL = "https://[SITENAME].pixalized.com/sign-in"
USERNAME = "your_email@gmail.com"
PASSWORD = "your_password"

class TestLegacyAdminNewUser():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def generate_random_string(self, length=6):
    """Generate random string for names and email suffix"""
    return ''.join(random.choices(string.ascii_lowercase + string.digits, k=length))
  
  def test_legacyAdminNewUser(self):
    # Generate random data for user creation
    random_first_name = f"Test{self.generate_random_string(4)}"
    random_last_name = f"User{self.generate_random_string(4)}"
    random_email_suffix = self.generate_random_string(8)
    random_email = f"theladywyvern+{random_email_suffix}@gmail.com"
    
    # Login
    self.driver.get(SITE_URL)
    self.driver.set_window_size(1382, 784)
    self.driver.find_element(By.ID, "username").click()
    self.driver.find_element(By.ID, "username").send_keys(USERNAME)
    self.driver.find_element(By.ID, "password").click()
    self.driver.find_element(By.ID, "password").send_keys(PASSWORD)
    self.driver.find_element(By.NAME, "commit").click()
    
    # Navigate to Users and Add User
    self.driver.find_element(By.LINK_TEXT, "Users").click()
    self.driver.find_element(By.LINK_TEXT, "Add User").click()
    
    # Fill user form with randomized data
    self.driver.find_element(By.NAME, "first_name").click()
    self.driver.find_element(By.NAME, "first_name").send_keys(random_first_name)
    self.driver.find_element(By.NAME, "last_name").send_keys(random_last_name)
    self.driver.find_element(By.NAME, "email").send_keys(random_email)
    self.driver.find_element(By.NAME, "site_epace_customer_id").send_keys("TEST")
    
    # Set status to Inactive
    self.driver.find_element(By.LINK_TEXT, "Inactive").click()
    
    # Random group/claim selection (this selects the 5th checkbox randomly)
    # You might need to adjust this based on how many groups/claims are available
    self.driver.find_element(By.CSS_SELECTOR, ".list-unstyled > .ng-not-empty:nth-child(5) > .checkbox > label").click()
    
    # Save the user
    self.driver.find_element(By.LINK_TEXT, "Save").click()
